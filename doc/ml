#!/usr/bin/zsh

log_file=~/l.log

build () {
	{_t=`date +%s.%N`;echo "`date`";cd /usr/src/linux&&make CC=clang CXX=clang++ -j4 && make CC=clang CXX=clang++ -j4 modules_install install headers_install INSTALL_HDR_PATH=/boot;date -d @${_t};date;echo -n 'elapsed hours: ';echo "scale=2;(`date +%s.%N`-${_t})/3600"|bc}>${log_file} 2>&1 &
}

fmtime () {
	local h=`echo "scale=0;($2 - $1)/3600"|bc`
	local m=`echo "scale=0;($2 - $1)%3600/60"|bc`
	local s=`echo "($2 - $1)%60"|bc`
	#local s=`echo "scale=3;($2 - $1)%60/1"|bc`
	echo ${h}:${m}:${s}
}

building_status () {
	local RED="\033[1;31m"
	local GREEN="\033[1;32m"
	local NOCOLOR="\033[0m"
	local id="fedora"
	if (grep 'CONFIG_LOCALVERSION.*gentoo' /usr/src/linux/.config>/dev/null) {
		id="gentoo"
	}
	local t0=$1
	local m=`stat -c %Y ${log_file}`
	t1=`date +%s.%N`
	m=`echo "($t1 - $m)/1"|bc`
	echo "${GREEN}${id}${NOCOLOR} making started ${GREEN}`fmtime $t0 $t1`${NOCOLOR} ago. active ${GREEN}${m}s${NOCOLOR} ago"
}

status () {
	local s=`head -1 ${log_file} 2>/dev/null`
	if [[ -z "$s" ]] {
		return 0
	}
	local t0=`date -d "$s" +%s.%N` 2>/dev/null
	if [[ -z "$t0" ]] {
		return 0
	}
	local e=`tail -2 ${log_file} | head -1`
	local t1=`date -d "$e" +%s.%N` 2>/dev/null

	if [[ -z "$t1" ]] || [[ $t1 -eq $t0 ]] {
		building_status $t0
	} else {
		local t2=`date +%s.%N` 2>/dev/null
		echo "make finished `fmtime $t1 $t2` ago, time cost `fmtime $t0 $t1`"
	}
}

getver() {
	local v=`{ls /boot/vmlinuz*$1*} 2>/dev/null`
	local n=`echo $v | wc -w`

	if [[ $n -gt 1 ]] {
		local v0=$v
		v=`{ls /boot/vmlinuz*$1} 2>/dev/null`
		n=`echo $v | wc -w`
		if [[ $n -gt 1 ]] {
			v=`{ls /boot/vmlinuz-$1} 2>/dev/null`
			n=`echo $v | wc -w`
		}
		if [[ $n -ne 1 ]] {
			echo "too many candadites: $v0" >&2
			return 1
		}
	}

	if [[ $n -ne 1 ]] {
		echo 'kernel version not found' >&2
		return 1
	}

	echo `basename $v` | cut -c 9-
}

pack () {
	local purge=""
	if [[ "$1" = "-d" ]] {
		shift
		purge="true"
		echo "purging $1 ..."
	}
	ver=`getver $1`
	if [[ -z "$ver" ]] {
		echo "can not get kernel version: $1"
		return 1
	}
	cd /
	echo "rm boot/initramfs-${ver}.img"
	rm boot/initramfs-${ver}.img
	echo "grubby --remove-kernel=/boot/vmlinuz-${ver}"
	grubby --remove-kernel=/boot/vmlinuz-${ver}
	if [[ -z "${purge}" ]] {
		echo "tar cf - lib/modules/${ver} boot/{System.map,vmlinuz,config}-${ver} "
		cp boot/gentoo.config boot/config-${ver}
		tar cf - lib/modules/${ver} boot/{System.map,vmlinuz,config}-${ver} | lzip -9 > l.tar.lz
	}
	echo "rm -rf boot/include lib/modules/${ver} boot/{System.map-,vmlinuz-}${ver}"
	rm -rf boot/include lib/modules/${ver} boot/{System.map,vmlinuz,config}-${ver}

	if ! (ls -L boot/vmlinuz>/dev/null 2>&1) {
		echo 'rm -f boot/{System.map,vmlinuz}'
		rm -f boot/{System.map,vmlinuz}
	}
}

if [[ $# -eq 0 ]] || [[ -z $1 ]] {
	status
} elif [[ $1 = "-m" ]] || [[ $1 = "--make" ]] {
	if (false) {
		echo "make kernel?[y/n]"
		read ans
		if [[ -n $ans ]] && [[ $ans != "y" ]] && [[ $ans != "Y" ]] {
			echo "cancelled"
			exit 0
		}
		unset ans
	}
	build $*
} else {
	pack $*
}
